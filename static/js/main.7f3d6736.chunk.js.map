{"version":3,"sources":["components/Quotes.js","components/Header.js","components/ToDo.js","components/TodoList.js","components/AddTodoForm.js","components/MainCard.js","App.js","index.js"],"names":["Quotes","useState","quote","setQuote","useEffect","axios","get","then","response","console","log","data","catch","error","className","Header","today","Date","getDate","getMonth","getFullYear","getDay","ToDo","todo","togglestrike","onClick","id","type","show","complete","task","TodoList","toDoList","filterStrikes","map","AddTodoForm","addTask","userInput","setUserInput","onSubmit","e","preventDefault","placeholder","value","onChange","target","MainCard","useLocalStorageState","setToDoList","str","copy","uuidv4","newstrikeddata","strikefiltereddata","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f3d6736.chunk.js","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nexport const Quotes = () => {\r\n  const [quote, setQuote] = useState(\"\");\r\n  const getquote = () => {\r\n    axios\r\n      .get(\"https://api.github.com/zen\")\r\n      .then(function (response) {\r\n        console.log(\"fetched new quote\", response.data);\r\n\r\n        setQuote(`\"${response.data}\"`);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setQuote(\"\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getquote();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"quote-div\">\r\n      <p className=\"quote-p\">{quote}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { React } from \"react\";\r\n\r\nconst Header = () => {\r\n  var today = new Date();\r\n\r\n  let days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  let months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"date\">\r\n        <p className=\"date-num\">{today.getDate()}</p>\r\n        <div className=\"date-month-year\">\r\n          <p className=\"date-month\">{months[today.getMonth()]}</p>\r\n          <p className=\"date-year\">{today.getFullYear()}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"day\">{days[today.getDay()]}</div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { RoughNotation, RoughNotationGroup } from \"react-rough-notation\";\r\n\r\nconst ToDo = ({ todo, togglestrike }) => {\r\n  return (\r\n    // <div\r\n    //   onClick={() => togglestrike(todo.id)}\r\n    //   className={todo.complete ? \"strike\" : \"\"}\r\n    // >\r\n    //   {todo.task}\r\n    // </div>\r\n    <div className=\"todoitem\" onClick={() => togglestrike(todo.id)}>\r\n      <RoughNotation type=\"strike-through\" show={todo.complete}>\r\n        {todo.task}\r\n      </RoughNotation>\r\n      <div\r\n        className={todo.complete ? \"checked check-circle\" : \"check-circle\"}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nconst TodoList = ({ toDoList, togglestrike, filterStrikes }) => {\r\n  return (\r\n    <div>\r\n      {toDoList.map((todo) => (\r\n        <ToDo todo={todo} key={todo.id} togglestrike={togglestrike} />\r\n      ))}\r\n\r\n      <div className=\"filter-button-parent\">\r\n        <button className=\"filter-button\" onClick={filterStrikes}>\r\n          Filter completed\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { React, useState } from \"react\";\r\n\r\nconst AddTodoForm = ({ addTask }) => {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTask(userInput);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"todoform\">\r\n      <form className=\"todoform_form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={userInput}\r\n          onChange={handleChange}\r\n          className=\"todoform_input\"\r\n        />\r\n        <button className=\"todoform_submit-button\">+</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import { React, useState } from \"react\";\r\nimport Header from \"./Header\";\r\n// import data from \"./data.json\";\r\nimport { useLocalStorageState } from \"use-local-storage-state\";\r\nimport TodoList from \"./TodoList\";\r\nimport AddTodoForm from \"./AddTodoForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction MainCard() {\r\n  // const [toDoList, setToDoList] = useState(data);\r\n\r\n  const [toDoList, setToDoList] = useLocalStorageState(\"localtodos\", [\r\n    {\r\n      id: 1,\r\n      task: \"Friday reservation at Dorsia\",\r\n      complete: true,\r\n    },\r\n  ]);\r\n\r\n  function togglestrike(id) {\r\n    let newstrikeddata = toDoList.map((task) => {\r\n      return task.id === id\r\n        ? { ...task, complete: !task.complete }\r\n        : { ...task };\r\n    });\r\n\r\n    setToDoList(newstrikeddata);\r\n  }\r\n\r\n  function filterStrikes() {\r\n    let strikefiltereddata = toDoList.filter((task) => !task.complete);\r\n    setToDoList(strikefiltereddata);\r\n  }\r\n\r\n  function addTask(str) {\r\n    let copy = [...toDoList];\r\n    copy = [...copy, { id: uuidv4(), task: str, complete: false }];\r\n    setToDoList(copy);\r\n  }\r\n\r\n  return (\r\n    <div className=\"MainCard\">\r\n      <Header />\r\n      <AddTodoForm addTask={addTask} />\r\n      <TodoList\r\n        toDoList={toDoList}\r\n        togglestrike={togglestrike}\r\n        filterStrikes={filterStrikes}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainCard;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { Quotes } from \"./components/Quotes\";\nimport MainCard from \"./components/MainCard\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainCard />\n      <Quotes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}